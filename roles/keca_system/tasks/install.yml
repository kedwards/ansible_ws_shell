---
- name: Add Apt signing key from official docker repo
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present

- name: add docker official repository for Debian Stretch
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
    state: present

- name: Add Apt signing key from official virtualbox repo
  apt_key:
    url: https://www.virtualbox.org/download/oracle_vbox_2016.asc
    state: present

- name: add virtualbox official repository for Debian Stretch
  apt_repository:
    repo: deb http://download.virtualbox.org/virtualbox/debian stretch contrib
    state: present

- name: Add Apt signing key from unofficial vagrant repo
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: AD319E0F7CFFA38B4D9F6E55CE3F3DE92099F7A4
    state: present

- name: add vagrant repository for Debian Stretch
  apt_repository:
    repo: deb https://vagrant-deb.linestarve.com/ any main
    state: present

- name: Index new repo into the cache
  apt:
    name: "*"
    state: latest
    update_cache: yes
    force_apt_get: yes

- name: Install packages
  apt:
    name: "{{ packagesdep }}"
    force_apt_get: yes
    state: latest
    update_cache: yes
  vars:
    packagesdep:
      - docker-ce
      - caja-dropbox
      - virtualbox-6.0
      - vagrant

    # - name: Ensure docker-compose is installed and available
    #   get_url:
    #     url: https://github.com/docker/compose/releases/download/1.23.2/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}
    #     dest: /usr/local/bin/docker-compose
    #     mode: 'u+x,g+x'

- name: Upgrade latest pip, setuptools, docker-py and docker-compose with pip
  pip:
    name: "{{ item.name }}"
    state: latest
  with_items:
    #- { name: pip, version: "latest", install: true }
    #- { name: setuptools, version: "latest", install: true }
    #- { name: docker-py, version: "latest", install: true }
    - { name: docker-compose, version: "latest", install: true }
  when: (item.version=="latest" and item.install)
  ignore_errors: yes

- name: "Add docker group"
  group:
    name: docker
    state: present

- name: "Add vagrant to docker group"
  user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: yes

# - name: "Restart Docker service"
#   service:
#     name: docker
#     state: restarted
